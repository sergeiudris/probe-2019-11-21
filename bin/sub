#!/bin/bash

push(){
  git submodule foreach git checkout master
  git submodule foreach git add .
  git submodule foreach git commit -m $1
  git submodule foreach git push origin master
  # git submodule update --recursive --merge
  git submodule update --remote
}

sub_update(){
  git submodule update --recursive --merge
}
sub_push_ondemand(){
  git push --recurse-submodules=on-demand
}

sub_init(){
  git submodule init
  sub_update
}

sub_remove(){
  # https://stackoverflow.com/questions/1260748/how-do-i-remove-a-submodule
  # 0. mv a/submodule a/submodule_tmp

  # 1. git submodule deinit -f -- a/submodule    
  # 2. rm -rf .git/modules/a/submodule
  # 3. git rm -f a/submodule
  # # Note: a/submodule (no trailing slash)

  # # or, if you want to leave it in your working tree and have done step 0
  # 3.   git rm --cached a/submodule
  # 3bis mv a/submodule_tmp a/submodule
  
  SRC=$1

  git submodule deinit -f -- $SRC
  rm -rf .git/modules/$SRC
  git rm -f $SRC
}


add(){
  # git submodule add https://github.com/seeris/dp.probe.plg.dfdb src/edge/dp.probe.plg.dfdb
  ls
}

"$@"